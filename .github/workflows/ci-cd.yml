name: CI/CD Pipeline

on:
  push:
    branches:
      - develop1
  pull_request:
    branches:
      - develop1

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: osdagdeveloper
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres_Intg_osdag
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build backend Docker image
        run: docker-compose build backend

      - name: Build frontend Docker image
        run: docker-compose build frontend

      - name: Start backend and frontend services
        run: docker-compose up -d

      - name: Install frontend dependencies
        run: docker-compose run frontend npm install

      - name: Run backend migrations
        run: docker-compose exec backend bash -c "source /opt/miniconda/etc/profile.d/conda.sh && conda activate myenv && python manage.py migrate"

      - name: Populate database
        run: docker-compose exec backend bash -c "source /opt/miniconda/etc/profile.d/conda.sh && conda activate myenv && python populate_database.py"

      - name: Update sequences
        run: docker-compose exec backend bash -c "source /opt/miniconda/etc/profile.d/conda.sh && conda activate myenv && python update_sequences.py"

      - name: Run tests
        run: docker-compose exec backend bash -c "source /opt/miniconda/etc/profile.d/conda.sh && conda activate myenv && pytest"

      - name: Stop services
        run: docker-compose down